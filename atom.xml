<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>凌晨九点空间</title>
  
  <subtitle>Dawn at Nine</subtitle>
  <link href="https://lcjd99.github.io/atom.xml" rel="self"/>
  
  <link href="https://lcjd99.github.io/"/>
  <updated>2024-04-03T15:14:43.699Z</updated>
  <id>https://lcjd99.github.io/</id>
  
  <author>
    <name>凌晨九点</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>重新学习C语言内存管理</title>
    <link href="https://lcjd99.github.io/CS61C/cs61c/C-and-memory/"/>
    <id>https://lcjd99.github.io/CS61C/cs61c/C-and-memory/</id>
    <published>2024-04-03T14:50:47.000Z</published>
    <updated>2024-04-03T15:14:43.699Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在学习完操作系统<strong>MIT6.828</strong>后重新学习C语言的内存管理问题。</p><h2 id="关于标准库-malloc-和-free"><a href="#关于标准库-malloc-和-free" class="headerlink" title="关于标准库 malloc 和 free"></a>关于标准库 malloc 和 free</h2><p>在C标准库中对内存的管理是通过为每个空闲内存提供一个小的数据结构来管理的，大致的伪代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">block</span> &#123;</span></span><br><span class="line">  <span class="type">int</span> size;  <span class="comment">//内存块的大小</span></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">block</span>* <span class="title">next</span>;</span> <span class="comment">//下一个内存块的指针</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也就是说这是一个记录空闲空间的循环链表(自己实现的<em>JOS</em>实际上也是这样管理内存)。</p><h3 id="malloc-的过程"><a href="#malloc-的过程" class="headerlink" title="malloc 的过程"></a>malloc 的过程</h3><p><code>malloc</code> 会根据申请内存的大小，在其中找到一个足够大的块，将这个块移出链表，并将指针返回。如果没有足够大的块，就会像操作系统申请空间，如果仍然无法满足会返回分配失败</p><p>在malloc的过程中还存在多个块满足条件如何选择的问题，此时会涉及到三种策略：</p><ol><li>best-fit ： 分配大小最合适的块</li><li>firtst-fit ：  分配最先找到的满足条件的块</li><li>next-fit ： 在每次遍历过程中记录位置，分配记录位置后下一个满足的块</li></ol><h3 id="free-的过程"><a href="#free-的过程" class="headerlink" title="free 的过程"></a>free 的过程</h3><p><code>free</code> 会将参数中指定的内存块加入到空闲块链表中，同时检查临近(物理空间)的块是否空闲，如果空闲会合并为一个更大的块。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在学习完操作系统&lt;strong&gt;MIT6.828&lt;/strong&gt;后重新学习C语言的内存管理问题。&lt;/p&gt;
&lt;h2 id=&quot;关于标准库-ma</summary>
      
    
    
    
    <category term="CS61C" scheme="https://lcjd99.github.io/categories/CS61C/"/>
    
    
    <category term="C" scheme="https://lcjd99.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>SEUForum 技术栈</title>
    <link href="https://lcjd99.github.io/Project/SEUForum-Stack/"/>
    <id>https://lcjd99.github.io/Project/SEUForum-Stack/</id>
    <published>2024-04-02T15:52:47.000Z</published>
    <updated>2024-04-02T15:52:47.540Z</updated>
    
    <content type="html"><![CDATA[<p>本项目全栈使用 JavaScript 实现</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本项目全栈使用 JavaScript 实现&lt;/p&gt;
</summary>
      
    
    
    
    <category term="Project" scheme="https://lcjd99.github.io/categories/Project/"/>
    
    
    <category term="JavaScript" scheme="https://lcjd99.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://lcjd99.github.io/test/hello-world/"/>
    <id>https://lcjd99.github.io/test/hello-world/</id>
    <published>2024-04-02T14:40:19.535Z</published>
    <updated>2024-04-02T15:38:52.847Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    <category term="test" scheme="https://lcjd99.github.io/categories/test/"/>
    
    
  </entry>
  
</feed>
